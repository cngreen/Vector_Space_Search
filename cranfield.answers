# Kari Green
# cngreen
# cranfield.answers

DESCRIPTION OF WEIGHTING SCHEMES USED:-------------------------------------------
Document:
tf-idf: (tfc)
	tf = raw term frequency, the number of times the term is used in the document
	idf = log(N/n) where N is the total number of documents and n is the documents containing the term
kari: (txc)
	tf = raw term frequency, the number of times the term is used in the document
	idf = removed
	rationale: removing idf and relying more on inverse document length and number of term occurrences, for highly techinical documents this can be an advantage (rare words are frequent in technical vocab, so we care more about frequency)
Query:
tf-idf: (tfc)
	tf = raw term frequency, the number of times the term is used in the query
	idf = log(N/n) where N is the total number of documents and n is the documents containing the term
kari: (npc)
	tf = augmented normalized term frequency, n-tf = 0.5 + 0.5 * (tf/max{tf})
	prob-idf = log(N-n/n)
	rationale: normalizing the term frequency gives a less dramatic weighting to queries that have repeated terms; probabilistic inverse collection frequency gives more weight to how rare a search term is

# -------------------------------------------------------------------------------
MACRO-AVERAGED PRECISION AND RECALL:

top-10:
	tfidf-tfidf: 
		precision: 0.216888888889
		recall: 0.324788169423
	kari-kari:
		precision: 0.220444444444
		recall: 0.330657118492

top-50:
	tfidf-tfidf: 
		precision: 0.0805333333333
		recall: 0.549488246245
	kari-kari:
		precision: 0.0808
		precision: 0.551335254729

top-100:
	tfidf-tfidf: 
		precision: 0.0489777777778
		recall: 0.646438567385
	kari-kari:
		precision: 0.0482222222222
		precision: 0.643459218707

top-500:
	tfidf-tfidf: 
		precision: 0.0129099277653
		recall: 0.785946701159
	kari-kari:
		precision: 0.0129543722098
		recall: 0.788515831375

# -------------------------------------------------------------------------------
WHICH WEIGHTING SCHEME PROVIDES BETTER RESULTS:

My weighting scheme (kari-kari) provides better results than the (tfidf-tfidf) weighting scheme.  For most macro-averaged precision and recall point (10, 50, 500) kari-kari had higher precision and recall.  This is likely due to some advantages of the changes I made to the weighting scheme.

For the document weighting scheme, I removed the idf component so the term weighting is based solely on term frequency.  In tf-idf, the idf (inverse document frequency) gives high weight to terms that are rare.  In highly technical document sets (such as the Cranfield documents), this can be a disadvantage because rare terms are somewhat common.

For the query weighting scheme, I updated the term frequency factor to be the augmented normalized term frequency.  A term will recieve the highest rating (1) if it used the most times in this query; otherwise the term will recieve a rating of 0.5 (the presence weight) + 0.5 * occurrences/max_occurences.  This prevents terms that are used commonly in the query from having extremely high weights.  I also updated the query weighting scheme to use the probabilistic inverse collection frequency factor instead of the inverse document frequency.  Using a probabilistic inverse collection frequency factor gives more weight to how rare a search term is.  This will give importance to the terms in a query that are more likely to be unique identifiers.

I think accounting for high rare term frequency in the corpus and the rarity of search terms in the query is what accounts for the improvement in search results between tfidf-tfidf and kari-kari.

